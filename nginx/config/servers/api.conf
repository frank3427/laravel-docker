map $http_origin $allow_cors {
    # Indicates all map values are hostnames and should be parsed as such
    hostnames;

    default 'false';

    # All your domains
    localhost 'true';
    @DOMAIN_APP@ 'true';
    www.@DOMAIN_APP@ 'true';
}

server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Sets names of a virtual server.
    #
    # (Default: server_name "";)
    # (Context: server)
    server_name api.@DOMAIN_APP@;

    # Configures logging
    error_log /var/log/nginx/api.@DOMAIN_APP@.error.log warn;

    # Sets the root directory for requests.
    #
    # (Default: root html;)
    # (Context: http, server, location, if in location)
    root /var/www/api.@DOMAIN_APP@/public;

    location / {
        # allow 1.2.3.4;
        deny all;

        try_files $uri $uri/ /index.php?$query_string =404;

        if ($allow_cors = 'true') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            # required to be able to read Authorization header in frontend
            # add_header 'Access-Control-Expose-Headers' 'Authorization' always;
        }

        add_header Cache-Control "no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0";

        # Security HTTP Headers
        include snippets/security_http_headers.conf;
    }

    include snippets/PHP_FPM.conf;
}

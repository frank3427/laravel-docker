##############
#### TLS Best Practices
##############

# Increase TLS Session Duration.
# Enable session resumption to improve https performance.
# Improve HTTPS performance with session resumption.
ssl_session_timeout 60m;
ssl_session_cache shared:SSL:20m;
ssl_session_tickets off;

# Disable SSL and only Enable TLS in Nginx.
#
# The latest version of the Transport Layer Security (TLS) protocol.
# Allows for data/message confidentiality, and message authentication codes for message integrity and as a by-product message authentication.
ssl_protocols TLSv1.2 TLSv1.3;

# Enables server-side protection from BEAST attacks.
# Enforce Server-Side Cipher Suite Preferences.
ssl_prefer_server_ciphers on;
# Enable Strong TLS Ciphers.
ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
# Enable modern TLS cipher suites (https://mozilla.github.io/server-side-tls/ssl-config-generator/)
# ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
ssl_ecdh_curve secp521r1:secp384r1;

# Specifies a file with DH parameters for DHE ciphers.
#
# A Diffie-Hellman parameter is a set of randomly generated data used when establishing Perfect Forward Secrecy during initiation of an HTTPS connection.
# The default size is usually 1024 or 2048 bits, depending on the serverâ€™s OpenSSL version, but a 4096 bit key will provide greater security.
#
# $> openssl genpkey -genparam -algorithm DH -out /root/certs/example.com/dhparam4096.pem -pkeyopt dh_paramgen_prime_len:4096
# $> openssl dhparam -out dhparam4096.pem 4096
ssl_dhparam /etc/nginx/certs/dhparam4096.pem;
# ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

# Enable OCSP stapling (http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox).
# more: https://sslmate.com/blog/post/ocsp_stapling_in_apache_and_nginx
#
# Verify OCSP stapling is working properly:
#     openssl s_client -connect example.com:443 -tls1 -tlsextdebug -status
ssl_stapling on;
ssl_stapling_verify on;
## Verify chain of trust of OCSP response using Root CA and Intermediate certs.
ssl_trusted_certificate /etc/nginx/certs/chain.pem;
resolver 8.8.8.8 8.8.4.4 valid=300s; # DNS Google
# resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001] valid=300s; # Cloudflare
resolver_timeout 10s;
